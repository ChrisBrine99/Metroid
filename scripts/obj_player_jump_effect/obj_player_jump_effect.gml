/// @description Insert summary of this file here.

#region Initializing any macros that are useful/related to obj_arm_cannon
#endregion

#region Initializing enumerators that are useful/related to obj_arm_cannon
#endregion

#region Initializing any globals that are useful/related to obj_arm_cannon
#endregion

#region The main object code for obj_arm_cannon

/// @param {Real}			index		Unique value generated by GML during compilation that represents this struct asset.
function obj_player_jump_effect(_index) : base_struct(_index) constructor{
	// Much like Game Maker's own x and y variables, these store the current position of the camera within 
	// the current room. By default they are always set to a value of zero.
	x = 0;
	y = 0;
	
	// 
	sprite_index = NO_SPRITE;
	image_xscale = 1;
	imageIndex = 0;
	alpha = 0.5;
	
	/// @description 
	draw = function(){
		if (sprite_index == NO_SPRITE) {return;}
		draw_sprite_ext(sprite_index, imageIndex, x, y, image_xscale, 1, 0, c_white, alpha);
	}
}

#endregion

#region Global functions related to obj_arm_cannon

/// @description 
/// @param {Real}			x			Samus's x position at the time of this effect's creation.
/// @param {Real}			y			Samus's y position at the time of this effect's creation.
/// @param {Asset.GmSprite} sprite		The jumping sprite that is copied over from Samus.
/// @param {Real}			imageIndex	The image of the copied over jumping sprite to draw. 
/// @param {Real}			imageXScale The direction Samus is currently facing (1 == Right, -1 == Left).
function create_player_jump_effect(_x, _y, _sprite, _imageIndex, _imageXScale){
	var _struct = instance_create_struct(obj_player_jump_effect);
	with(_struct){ // Apply all the properties to the newly created jump effect.
		x =				_x;
		y =				_y;
		sprite_index =	_sprite;
		image_xscale =	_imageXScale;
		imageIndex =	_imageIndex;
	}
	return _struct;
}

#endregion