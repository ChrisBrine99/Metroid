#region Initializing any macros that are useful/related to obj_gui_group

#macro	UI_ALIGN_NONE		   -1		// No alignment for any elements
#macro	UI_ALIGN_RIGHT			8000	// Horizontal alignment states
#macro	UI_ALIGN_LEFT			8001
#macro	UI_ALIGN_HCENTER		8002
#macro	UI_ALIGN_TOP			8003	// Vertical alignment states
#macro	UI_ALIGN_BOTTOM			8004
#macro	UI_ALIGN_VCENTER		8005
#macro	UI_ALIGN_MIDDLE			8006	// Centers all elements along both axes

#endregion

#region Initializing enumerators that are useful/related to obj_gui_group
#endregion

#region Initializing any globals that are useful/related to obj_gui_group
#endregion

#region The main object code for obj_gui_group

/// @param {Real} index		Unique value generated by GML during compilation that represents this struct asset.
function obj_gui_group(_index) : base_struct(_index) constructor{
	// 
	x = 0;
	y = 0;
	
	// 
	uiElements = ds_list_create();
	uiAlignment = UI_ALIGN_NONE;
	
	// 
	alpha = 0;
	alphaTarget = 0;
	alphaModifier = 0;
	
	/// @description 
	cleanup = function(){
		var _element;
		var _length = ds_list_size(uiElements);
		for (var i = 0; i < _length; i++){
			_element = uiElements[| i];
			with(_element) {cleanup();}
			delete _element;
		}
		ds_list_clear(uiElements);
		ds_list_destroy(uiElements);
	}
	
	/// @description 
	end_step = function(){
		alpha = value_set_linear(alpha, alphaTarget, alphaModifier);
		
		var _length = ds_list_size(uiElements);
		for (var i = 0; i < _length; i++){
			with(uiElements[| i]) {end_step();}
		}
	}
	
	/// @description 
	draw_gui = function(){
		if (alpha <= 0) {return;}
		var _alpha = alpha;
		
		display_set_gui_maximize(-1, -1, x, y);
		var _length = ds_list_size(uiElements);
		for (var i = 0; i < _length; i++){
			with(uiElements[| i]) {draw_gui(_alpha);}
		}
		display_set_gui_maximize(-1, -1, 0, 0);
	}
}

#endregion

#region Global functions related to obj_gui_group

/// @description Creates a new GUI group object, which exists to manage elements that are drawn to the GUI 
/// layer; menu text, sprites, etc. The position and alignment determine where the GUI group renders all of
/// its elements and how those elements are positioned relative to each other and the position of the GUI 
/// group object itself.
/// @param {Real}	x			Horizontal position on the screen.
/// @param {Real}	y			Vertical position on the screen.
/// @param {Real}	alignment	Alignment setting for the GUI group to adhere to.
/// @param {Real}	alpha		Starting opacity level for the GUI group.
function gui_create_group(_x, _y, _alignment, _alpha){
	var _instance = instance_create_struct(obj_gui_group);
	with(_instance){
		x =				_x;
		y =				_y;
		uiAlignment	=	_alignment;
		alpha =			_alpha;
		alphaTarget =	_alpha;
	}
	return _instance;
}

/// @description Adds a new UI element to the desire GUI group object that will handle calling its event
/// functions and any memory management. Positioning of this element is determined automatically based on the
/// alignment setting applied to the GUI group object itself.
/// @param {Id.Instance}	group		The group that the element will be create and managed by.
/// @param {Function}		element		Which type of element to create and add to the group.
/// @param {Real}			spacing		Determines distance between new element and previous one.
/// @param {Real}			alpha		Starting opacity for the newly created ui element.
function gui_group_add_element(_group, _element, _spacing, _alpha){
	with(_group){
		if (object_index != obj_gui_group) {return;}
		var _instance = instance_create_struct(_element);
		with(_instance){
			alpha = _alpha;
			alphaTarget = _alpha;
		}
		ds_list_add(uiElements, _instance);
	}
}

/// @description Sets the desired opacity for the GUI group object, which determines the visibility of all UI
/// elements managed by this object alongside their own alpha value(s). The speed of the opacity transition is
/// also determined here.
/// @param {Id.Instance}	group			The group to apply the opacity settings to.
/// @param {Real}			alphaTarget		Target opactiy level for the group to that the GUI group should be.
/// @param {Real}			alphaModifier	Determines how fast the opacity shifts from its current value to the target.
function gui_group_set_opacity(_group, _alphaTarget, _alphaModifier){
	with(_group){
		if (object_index != obj_gui_group) {return;}
		alphaTarget = _alphaTarget;
		alphaModifier = _alphaModifier;
	}
}

#endregion